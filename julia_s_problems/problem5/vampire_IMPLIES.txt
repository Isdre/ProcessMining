% Running in auto input_syntax mode. Trying TPTP
% Refutation found. Thanks to Tanya!
% SZS status Theorem for tptp_IMPLIES
% SZS output start Proof for tptp_IMPLIES
3. ? [X0] : x2_s(X0) [input]
5. ! [X1] : (x2_s(X1) => ((? [X4] : (test_repair(X4) | l_s(X4)) & ~? [X3] : tau(X3)) | (~? [X2] : (test_repair(X2) | l_s(X2)) & ? [X0] : tau(X0)))) [input]
46. ! [X0] : ~(a2_e(X0) & (a2_e(X0) | a2_s(X0) | x2_e(X0) | x2_s(X0))) [input]
49. ! [X1] : ((test_repair(X1) | l_s(X1) | tau(X1)) => ? [X0] : x2_e(X0)) [input]
85. ! [X1] : ((x2_e(X1) | l_s(X1)) => ? [X0] : test_repair(X0)) [input]
100. ! [X1] : ((test_repair(X1) | l_s(X1)) => ? [X0] : a2_e(X0)) [input]
114. ! [X0] : (x2_s(X0) => ((? [X1] : (test_repair(X1) | l_s(X1)) & ~? [X2] : tau(X2)) | (~? [X3] : (test_repair(X3) | l_s(X3)) & ? [X4] : tau(X4)))) [rectify 5]
132. ! [X0] : ((test_repair(X0) | l_s(X0) | tau(X0)) => ? [X1] : x2_e(X1)) [rectify 49]
143. ! [X0] : ((x2_e(X0) | l_s(X0)) => ? [X1] : test_repair(X1)) [rectify 85]
148. ! [X0] : ((test_repair(X0) | l_s(X0)) => ? [X1] : a2_e(X1)) [rectify 100]
220. ! [X0] : (((? [X1] : (test_repair(X1) | l_s(X1)) & ! [X2] : ~tau(X2)) | (! [X3] : (~test_repair(X3) & ~l_s(X3)) & ? [X4] : tau(X4))) | ~x2_s(X0)) [ennf transformation 114]
221. ! [X0] : ((? [X1] : (test_repair(X1) | l_s(X1)) & ! [X2] : ~tau(X2)) | (! [X3] : (~test_repair(X3) & ~l_s(X3)) & ? [X4] : tau(X4)) | ~x2_s(X0)) [flattening 220]
266. ! [X0] : (~a2_e(X0) | (~a2_e(X0) & ~a2_s(X0) & ~x2_e(X0) & ~x2_s(X0))) [ennf transformation 46]
269. ! [X0] : (? [X1] : x2_e(X1) | (~test_repair(X0) & ~l_s(X0) & ~tau(X0))) [ennf transformation 132]
302. ! [X0] : (? [X1] : test_repair(X1) | (~x2_e(X0) & ~l_s(X0))) [ennf transformation 143]
319. ! [X0] : (? [X1] : a2_e(X1) | (~test_repair(X0) & ~l_s(X0))) [ennf transformation 148]
329. ? [X0] : x2_s(X0) => x2_s(sK0) [choice axiom]
330. x2_s(sK0) [skolemisation 3,329]
333. ? [X1] : (test_repair(X1) | l_s(X1)) => (test_repair(sK2) | l_s(sK2)) [choice axiom]
334. ? [X4] : tau(X4) => tau(sK3) [choice axiom]
335. ! [X0] : (((test_repair(sK2) | l_s(sK2)) & ! [X2] : ~tau(X2)) | (! [X3] : (~test_repair(X3) & ~l_s(X3)) & tau(sK3)) | ~x2_s(X0)) [skolemisation 221,334,333]
379. ? [X1] : x2_e(X1) => x2_e(sK29) [choice axiom]
380. ! [X0] : (x2_e(sK29) | (~test_repair(X0) & ~l_s(X0) & ~tau(X0))) [skolemisation 269,379]
411. ? [X1] : test_repair(X1) => test_repair(sK46) [choice axiom]
412. ! [X0] : (test_repair(sK46) | (~x2_e(X0) & ~l_s(X0))) [skolemisation 302,411]
423. ? [X1] : a2_e(X1) => a2_e(sK53) [choice axiom]
424. ! [X0] : (a2_e(sK53) | (~test_repair(X0) & ~l_s(X0))) [skolemisation 319,423]
438. x2_s(sK0) [cnf transformation 330]
443. test_repair(sK2) | l_s(sK2) | tau(sK3) | ~x2_s(X0) [cnf transformation 335]
520. ~a2_e(X0) | ~a2_e(X0) [cnf transformation 266]
526. x2_e(sK29) | ~tau(X0) [cnf transformation 380]
590. test_repair(sK46) | ~x2_e(X0) [cnf transformation 412]
615. a2_e(sK53) | ~l_s(X0) [cnf transformation 424]
616. a2_e(sK53) | ~test_repair(X0) [cnf transformation 424]
632. ~a2_e(X0) [duplicate literal removal 520]
634. 1 <=> ! [X0] : ~x2_s(X0) [avatar definition]
635. ~x2_s(X0) <- (1) [avatar component clause 634]
637. 2 <=> ! [X3] : ~test_repair(X3) [avatar definition]
638. ~test_repair(X3) <- (2) [avatar component clause 637]
640. 3 <=> l_s(sK2) [avatar definition]
642. l_s(sK2) <- (3) [avatar component clause 640]
644. 4 <=> test_repair(sK2) [avatar definition]
646. test_repair(sK2) <- (4) [avatar component clause 644]
649. 5 <=> ! [X3] : ~l_s(X3) [avatar definition]
650. ~l_s(X3) <- (5) [avatar component clause 649]
653. 6 <=> tau(sK3) [avatar definition]
655. tau(sK3) <- (6) [avatar component clause 653]
656. 1 | 6 | 3 | 4 [avatar split clause 443,644,640,653,634]
658. 7 <=> ! [X2] : ~tau(X2) [avatar definition]
659. ~tau(X2) <- (7) [avatar component clause 658]
676. 11 <=> ! [X0] : ~x2_e(X0) [avatar definition]
677. ~x2_e(X0) <- (11) [avatar component clause 676]
718. 21 <=> ! [X0] : ~a2_e(X0) [avatar definition]
719. ~a2_e(X0) <- (21) [avatar component clause 718]
850. 21 [avatar split clause 632,718]
860. 50 <=> x2_e(sK29) [avatar definition]
862. x2_e(sK29) <- (50) [avatar component clause 860]
865. 7 | 50 [avatar split clause 526,860,658]
955. 68 <=> test_repair(sK46) [avatar definition]
957. test_repair(sK46) <- (68) [avatar component clause 955]
958. 11 | 68 [avatar split clause 590,955,676]
999. 76 <=> a2_e(sK53) [avatar definition]
1001. a2_e(sK53) <- (76) [avatar component clause 999]
1002. 2 | 76 [avatar split clause 616,999,637]
1003. 5 | 76 [avatar split clause 615,999,649]
1034. $false <- (3, 5) [subsumption resolution 642,650]
1035. ~3 | ~5 [avatar contradiction clause 1034]
1036. $false <- (21, 76) [subsumption resolution 1001,719]
1037. ~21 | ~76 [avatar contradiction clause 1036]
1038. $false <- (2, 68) [subsumption resolution 957,638]
1039. ~2 | ~68 [avatar contradiction clause 1038]
1040. $false <- (11, 50) [subsumption resolution 862,677]
1041. ~11 | ~50 [avatar contradiction clause 1040]
1046. $false <- (6, 7) [subsumption resolution 655,659]
1047. ~6 | ~7 [avatar contradiction clause 1046]
1048. $false <- (2, 4) [subsumption resolution 646,638]
1049. ~2 | ~4 [avatar contradiction clause 1048]
1050. $false <- (1) [resolution 635,438]
1053. ~1 [avatar contradiction clause 1050]
1054. $false [avatar sat refutation 656,850,865,958,1002,1003,1035,1037,1039,1041,1047,1049,1053]
% SZS output end Proof for tptp_IMPLIES
% ------------------------------
% Version: Vampire 4.9 (commit 5ad494e78 on 2024-06-14 14:05:27 +0100)
% Linked with Z3 4.12.3.0 79bbbf76d0c123481c8ca05cd3a98939270074d3 z3-4.8.4-7980-g79bbbf76d
% Termination reason: Refutation

% Memory used [KB]: 882
% Time elapsed: 0.002 s
% ------------------------------
% ------------------------------

perf_event_open failed (instruction limiting will be disabled): Permission denied
(If you are seeing 'Permission denied' ask your admin to run 'sudo sysctl -w kernel.perf_event_paranoid=-1' for you.)
